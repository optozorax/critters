Не визуализация:
 ✔ Добавить возможность ресайзить мир @done (20-10-18 15:38)
 ✔ Добавить правила боулинга @done (20-10-19 00:08)
 ✔ Сделать чтобы можно было наблюдать промежуточные состояния @done (20-10-19 00:08)
 ☐ Добавить возможность выбирать правила мира, и сделать обычные криттерсы, и криттерсы с обратимыми во времени правилами
 ☐ Притащить сюда библиотеку для вычислений правил, и вычислять правила для мира прямо во время запуска программы
 ☐ Взять ещё отсюда правила: https://dmishin.github.io/js-revca/index.html

Визуализация мира клеточного автомата:
 ✔ Сделать чтобы показывалось квадратная сетка для текущего и промежуточного состояний @done (20-11-03 01:45)

Рефакторинг:
 ☐ Переделать класс мира так, чтобы он:
   + Мог изменить правила на лету
   + Имел методы для получения состояний 1-3, чтобы нажатия мышью везде работали одинаково
   + Мог менять свой размер
   + Мог инвертироваться
 ☐ Сделать класс камеры, чтобы он автоматически принимал текущую мышь, текущее состояние колёсика итд, и в зависимости от этого сам всё вычислял, назвать его InteractableCamera2D

Интерфейс:
 ✔ Сделать чтобы рисование на отпускание двух клавиш работало нормально @done (20-11-03 01:50)
 ☐ Сделать визуальный редактор для обратимых правил, и чтобы он записывал правила в виде base64. При этом правила для работы над обычными криттерсами занимают 8 символов, над двушаговыми 15 символвов, а над the tenet of life занимают 134 символа. При этом чтобы можно было выбирать обычное расположение правил (последовательно), либо такое где расположено удобно для пользователя (как у меня в нарисованном в draw.io), либо где имеется 2 шага
 ☐ Сделать чтобы при передвижении мышью по полю, показывалось по какому правилу будет преобразовываться данный блок
 ☐ Разделить окно информации, окно настроек, окно хелпа, окно выбора правил
 ☐ Сделать чтобы все числа для настроек можно было вводить через поля, а так же увеличивать по кнопочкам +, -, +10, -10, +100, -100
 ☐ Вернуть фичу когда показывается нулевой шаг

Другое:
 ☐ Сделать автоматический деплой на ветку с html, при этом чтобы заранее чекались все ошибки перед деплоем

Не критично:
 ☐ Очень далёкое будущее: дать пользователю возможность самому выбирать правила для обычных криттерсов
 ☐ Сделать чтобы показ нулевого шага делался с режимом play
 ☐ Сделать кнопку play, которая будет симулировать с максимальной возможной скоростью, и будет скипать лишние фреймы. Ну и чтобы её можно было настраивать: идти вперёд или назад
 ☐ Сделать, чтобы при вводе симуляции до 100500 шага включался режим play, и симуляция доходила до этого места, аналогично с любым способом симуляции
 ☐ Поставить другой шрифт в мегаюай, настроить все марджины, паддинги
 ☐ Сделать класс чтобы клавиши работали по нормальному через зажатие, с автоповтором, включаемым через сколько-то-там миллисекунд

Статья сказать:
  ☐ Криттерсы на белом поле работают точно так же как и на полностью заполненном
  ☐ довод жизни с полностью красными и полностью синими клетками время-симметричен, а просто криттерсы - нет
  ☐ в статье про криттерсы показать что глайдер может по разному работать в зависимости от позиции в бдоке5